{"ast":null,"code":"import { Empleado } from 'src/app/models/empleado';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\n\nfunction CrudComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 14);\n    i0.ɵɵlistener(\"click\", function CrudComponent_li_9_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const empleado_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.openForEdit(empleado_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const empleado_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", empleado_r2 == ctx_r0.selectedEmployee);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", empleado_r2.id, \" - \", empleado_r2.nombre, \" - \", empleado_r2.pais, \" \");\n  }\n}\n\nfunction CrudComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function CrudComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.delete());\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let CrudComponent = /*#__PURE__*/(() => {\n  class CrudComponent {\n    constructor() {\n      this.empleadoarray = [{\n        id: 1,\n        nombre: \"Miguel\",\n        pais: \"Colombia\"\n      }, {\n        id: 2,\n        nombre: \"Melanny\",\n        pais: \"Brasil\"\n      }, {\n        id: 3,\n        nombre: \"Cindy\",\n        pais: \"Canada\"\n      }]; //Es el nombre de la variable donde se guardan los datos del formulario\n\n      this.selectedEmployee = new Empleado();\n    }\n\n    registrar() {\n      if (this.selectedEmployee.id === 0) {\n        //Toma el valor de un nuevo empleado y le agrega un id + 1 al arreglo de empleados\n        this.selectedEmployee.id = this.empleadoarray.length + 1; //Agrega el nuevo empleado al arreglo de empleados\n\n        this.empleadoarray.push(this.selectedEmployee); //Limpia el formulario\n\n        this.selectedEmployee = new Empleado();\n      }\n    }\n\n    openForEdit(empleado) {\n      //Al formulario le indicamos que se llene con el valor del empleado que recibe. *Asi se llama la variable del *ngFor\n      this.selectedEmployee = empleado;\n    }\n\n    delete() {\n      //Ejecuta una ventana de confirmacion si es correcto se ejecuta el true del condicional\n      if (confirm(\"Estas seguro de eliminar a esta persona\")) {\n        //Toma el listado de empleados y lo recorre si la variable x es diferente del empleado seleccinado lo dejara tal cual\n        this.empleadoarray = this.empleadoarray.filter(x => x != this.selectedEmployee); //Limpia el formulario\n\n        this.selectedEmployee = new Empleado();\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  CrudComponent.ɵfac = function CrudComponent_Factory(t) {\n    return new (t || CrudComponent)();\n  };\n\n  CrudComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrudComponent,\n    selectors: [[\"app-crud\"]],\n    decls: 22,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-8\"], [1, \"list-group\"], [\"class\", \"list-group-item list-group-item-action\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"mt-4\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"Nombre\", \"name\", \"nombre\", \"id\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Pais\", \"name\", \"pais\", \"id\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"mt-4\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"list-group-item\", \"list-group-item-action\", 3, \"click\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function CrudComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n        i0.ɵɵtext(4, \"Ejercicio CRUD\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"div\", 1)(7, \"div\", 2)(8, \"ul\", 3);\n        i0.ɵɵtemplate(9, CrudComponent_li_9_Template, 2, 5, \"li\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"div\", 7);\n        i0.ɵɵtext(13, \" Ingresar empleado \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8)(15, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CrudComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.selectedEmployee.nombre = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function CrudComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.selectedEmployee.pais = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 11)(19, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CrudComponent_Template_button_click_19_listener() {\n          return ctx.registrar();\n        });\n        i0.ɵɵtext(20, \"Registrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, CrudComponent_button_21_Template, 2, 0, \"button\", 13);\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.empleadoarray);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedEmployee.nombre);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedEmployee.pais);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedEmployee.id !== 0);\n      }\n    },\n    dependencies: [i1.NgForOf, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel]\n  });\n  return CrudComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}